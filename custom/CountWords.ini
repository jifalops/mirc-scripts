[script]
n0=/*
n1=*********************************************************************
n2=*
n3=* CountWords
n4=*
n5=* External variables used:
n6=*   %data_dir
n7=*
n8=*********************************************************************
n9=*/
n10=
n11=/*
n12=* Aliases
n13=*/
n14=
n15=/** 
n16=* Manditory alias for each script module.
n17=*/
n18=alias tag return CountWords
n19=
n20=;
n21=; Variables shared within this file
n22=; 
n23=alias table { return $tag $+ _ $+ $network $+ _ $+ $chan }
n24=alias user { return $left($site, $calc($pos($site, ., 1) - 1)) }
n25=alias separator1 { return 12,1§»4,1 }
n26=alias separator2 { return 12,1¬7,1 }
n27=alias separator3 { return 10,1 ¤ 7,1 }
n28=alias separator4 { return 12,1«§4,1 }
n29=alias delim { return @ } ; Must be one character
n30=
n31=
n32=;
n33=; Functions
n34=;
n35=
n36=alias init {
n37=  hmake $table 100
n38=}
n39=
n40=alias exists {
n41=  if ($hget($table)) return $true
n42=}
n43=
n44=alias enabled {
n45=  if (% [ $+ [ $tag ] $+ _ $+ enabled ] == true) return $true
n46=}
n47=alias enable { 
n48=  % [ $+ [ $tag ] $+ _ $+ enabled ] = true
n49=}
n50=alias disable { 
n51=  % [ $+ [ $tag ] $+ _ $+ enabled ] = false
n52=}
n53=
n54=alias toggle {
n55=  if ($enabled) disable
n56=  else enable
n57=}
n58=
n59=alias enabled_public {
n60=  if (% [ $+ [ $tag ] $+ _public_ $+ enabled ] == true) return $true
n61=}
n62=alias enable_public { 
n63=  % [ $+ [ $tag ] $+ _public_ $+ enabled ] = true
n64=}
n65=alias disable_public { 
n66=  % [ $+ [ $tag ] $+ _public_ $+ enabled ] = false
n67=}
n68=
n69=alias toggle_public {
n70=  if ($enabled_public) disable_public
n71=  else enable_public
n72=}
n73=
n74=alias get_file { return %data_dir $+ $table $+ .ini }
n75=alias save { hsave -si $table $get_file } 
n76=;alias load { hload -si $table $get_file }
n77=
n78=alias get_timer { return $table $+ _timer }
n79=
n80=alias get_list {
n81=  if (!$enabled) return
n82=  if (!$exists) return
n83=
n84=  ; Prepare for loop
n85=  var %count = $hget($table, 0).item  
n86=  var %key = $hget($table, 1).item 
n87=  var %body = $hget($table, %key) %key
n88=  var %i = 2
n89=
n90=  ; Get full list
n91=  while (%i <= %count) {
n92=    %key = $hget($table, %i).item
n93=    %body = %body $+ $delim $+ $hget($table, %key) %key
n94=    inc %i
n95=  }
n96=
n97=  ; Sort full list
n98=  %body = $sorttok(%body, $asc($delim), rn)
n99=
n100=  ; Determine limit
n101=  if (($1 > 0) && ($1 < %count)) %count = $1
n102=
n103=  ; Rebuild sorted list with new limit and format
n104=  tokenize $asc($delim) %body
n105=  %body = $1
n106=  %i = 2    
n107=  while (%i <= %count) {
n108=    %body = %body $+ $separator3 $+  [ $ $+  [ %i ] ] 
n109=    inc %i
n110=  }
n111=
n112=  return $separator1 $chan Top %count Chatters $separator2 %body $separator4
n113=}
n114=
n115=/********************************************
n116=;
n117=; Events
n118=;
n119=on 1:text:*:#: {
n120=  if (!$enabled) return
n121=  if (!$exists) init
n122=  if ($hget($table) != 0 && $user != null) hinc $table $user $numtok($1-, 32)
n123=
n124=  if ($enabled_public && $nick isop $chan && $1 == .chatters) msg $chan $get_list($2)
n125=}
n126=
n127=on 1:input:#: {
n128=  if ($1 == .chatters) msg $chan $get_list($2)
n129=}
n130=
n131=on 1:join:#: {
n132=  if ($nick == $me) {
n133=    if ($enabled) init
n134=    load
n135=    timer $+ $get_timer 0 300 save
n136=  }
n137=}
n138=
n139=on 1:part:#: {
n140=  if ($nick == $me) {
n141=    save
n142=    timer $+ $get_timer off
n143=  }
n144=}
n145=*******************************************************/
n146=
n147=/*
n148=* Menus
n149=*/
n150=
n151=menu channel {  
n152=  -
n153=  Count Words (needs updated)
n154=  .$iif($enabled, $style(1)) Enabled: toggle
n155=  .$iif($enabled_public, $style(1)) Respond to .chatters: toggle_public
n156=  .Show all: echo $get_list
n157=  .Show top ...: $get_list($?="Show how many?")
n158=  -
n159=}
n160=
n161=
n162=:error
n163=echo $error
